body{
    height: 600px;
    border: 1px solid black;
}

.container{
    height: 600px;
    border: 1px solid #FF69B4;
    display: grid;
    /* grid-template-columns (colunas / grid-template-rows (linhas)*/
    grid-template-columns: repeat(4, 20%);
    /* grid-template-columns: repeat(4, 1fr) = Para repetir o tanto de colunas digitado dentro do parênteses. O 1º valor é quantidade de colunas, o 2º valor é o tamanho */
    /* fr= fração; significa que será divido em partes iguais */
    /* grid-template-columns: 25% 25% 25% 25% = sem usar repeat, portanto, cada valor significa uma coluna*/
    grid-template-rows: auto;
    /* grid-template-rows: repeat(2, 50px) = Para repetir o tanto de colunas digitado dentro do parênteses. O 1º valor é quantidade de colunas, o 2º valor é o tamanho */
    /* fr= fração; significa que será divido em partes iguais*/
    /* grid-template-rows: 50px 50px ; sem usar repeat, portanto, cada valor significa uma coluna */

    /* column-gap = para separar uma coluna da outra */
    column-gap: 10px;
    /* espaço entre colunas */

    /* row-gap = para separar uma linha da outra */
    row-gap: 15px;
    /* espaço entre linhas */

    /* justify-items= alinha horizontalmente os itens do grid */
    /* star= valor padrão */
    justify-items: center;
    /*  justify-items: center; = elemento no centro */
    /* justify-items: end; = elemento na direita */
    /* justify-items: stretch; = elemento copa todo o valor da célula */

    /* align-items= vertical VS justify-items= horizontal */

    /*  align-items= alinha verticalmente os itens do grid */
    align-items: center;
    /* align-items: center; = os elementos ficam no centro */
    /* align-items: end; = os elementos ficam na base */

    /* justify-content = move o grid na tela */
    /*justify-content= mover o container na horizontal */
    /* space-around = separa as colunas com tamanho uniforme entre elas */
    /* space-between = espaço uniforme entre as colunas, mas nas bordas esquerdas e direita ele cola o elemento, ou seja, fica grudado na lateral da tela */
    /* space-evenly= espaço uniforme entre cada elemento */

    justify-content: space-evenly;

    /* align-content é espaço entre linhas */
    /* align-content= mover o container na vertical */
    align-content: space-evenly;

}

.itens{
    width: 100%;
    height: 100%;
    border: 1px solid #C71585;
    font-size: 150%px;
}

#item1{
    /* grid-column=referente as linhas verticais */
    grid-column: 1 / 3;
    grid-row: 1 / 3;
    /* grid-row=referente as linhas horizontais */
   
}

/* A partir dos código abaixo aula 09 sobre GRID */

#container2{
    display: grid;
    /* Grid de 3x4 */
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(4, 70px);
   
}

#item01{
    border: 1px solid yellow;
    grid-column: 1 / 4;
    width: 70%;
    justify-self: center;
    /* justify-self= center = vai centralizar o elemento dentro das células no eixo horizontal */
}

#item02{
    border: 1px solid green;

}

#item03{
    border: 1px solid blue;
    grid-column: 3 / 4;
}

#item04{
    border: 1px solid brown;
    grid-column: 2 / 4 ;
}

#item06{
    grid-column: 1 / 3;
    grid-row: 4 / 5;
    border: 1px solid red;
    height: 60%;
    align-self: center;
    /* align-self = mover um unico elemento de cima para baixo no eixo vertical */
}

#item05{
    border: 1px solid ;
    grid-column:  3 / 4;
    height: 70%;
    width: 70%;
    justify-self: center;
    /*  justify-self: center; = EIXO HORIZONTAL */
    align-self: center;
    /*align-self: center; = EIXO VERTICAL  */
    place-self: center;
    /* place-self: center; = JUNÇÃO do align-self e place-self */
} 

/*CONCEITOS QUE SE REPETEM:  */
/* align = eixo vertical */
/* justify = eixo horizontal */
/* item = itens */
/* content = as celulas e container do grid */
/* colum = retas verticais */
/* row = retas horizontais */
/* self = para mexer em um único elemento (item) */